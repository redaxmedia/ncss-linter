#!/usr/bin/env node

const program = require('commander');
const ncss = require('../');
const core = ncss.core;
const reporter = ncss.reporter;
const validator = ncss.validator;
const helper = ncss.helper;
const ruleset = ncss.ruleset;
const option = ncss.option;
const packageArray = require('../package.json');

let REPORTER;
let VALIDATOR;
let CORE;

program
	.version(packageArray.name + ' ' + packageArray.version)
	.option('-C, --config <config>')
	.option('-H, --html <html>')
	.option('-P, --path <path>')
	.option('-U, --url <url>')
	.option('-N, --namespace <namespace>')
	.option('-E, --separator <separator>')
	.option('-S, --selector <selector>')
	.option('-L, --log-level <log-level>')
	.option('-V, --threshold-error <threshold-error>')
	.option('-W, --threshold-warn <threshold-warn>')
	.option('-Y, --halt-on-error')
	.option('-Z, --halt-on-warn')
	.parse(process.argv);

option.init(
{
	config: program.config,
	html: program.html,
	path: program.path,
	url: program.url,
	namespace: program.namespace,
	separator: program.separator,
	selector: program.selector,
	logLevel: program.logLevel,
	thresholdError: program.thresholdError,
	thresholdWarn: program.thresholdWarn,
	haltOnError: program.haltOnError,
	haltOnWarn: program.haltOnWarn
});
REPORTER = new reporter(
{
	option
});
VALIDATOR = new validator(
{
	ruleset,
	option
});
CORE = new core(
{
	reporter: REPORTER,
	validator: VALIDATOR,
	helper,
	option
});
CORE.init();